workflows:
  vcmi-ios-workflow:
    name: VCMI iOS Build
    environment:
      groups:
        # Добавьте здесь любые переменные окружения если нужны
      xcode: latest
      cocoapods: default
    scripts:
      - name: Install system dependencies
        script: |
          brew install \
            autoconf \
            automake \
            libtool \
            pkg-config \
            cmake \
            gettext \
            ninja \
            wget

      - name: Clone VCMI with submodules
        script: |
          git clone --recursive --depth 1 https://github.com/vcmi/vcmi.git
          cd vcmi

      - name: Build iOS dependencies
        script: |
          cd vcmi
          chmod +x ios-build-dependencies.sh
          # Собираем зависимости для iOS
          ./ios-build-dependencies.sh

      - name: Configure VCMI project
        script: |
          cd vcmi
          mkdir -p build-ios
          cd build-ios

          # Получаем путь к iOS SDK
          export SDK_PATH=$(xcrun --sdk iphoneos --show-sdk-path)
          
          # Конфигурация CMake согласно документации VCMI
          cmake .. \
            -DCMAKE_TOOLCHAIN_FILE=../cmake/ios.toolchain.cmake \
            -DPLATFORM=OS64 \
            -DDEPLOYMENT_TARGET=10.0 \
            -DENABLE_BITCODE=OFF \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_PREFIX_PATH=../ios-dependencies/install \
            -DBOOST_ROOT=../ios-dependencies/install \
            -DBoost_NO_SYSTEM_PATHS=ON \
            -DCMAKE_FIND_ROOT_PATH=../ios-dependencies/install \
            -DCMAKE_FRAMEWORK_PATH=../ios-dependencies/install \
            -DENABLE_TEST=OFF \
            -DENABLE_LAUNCHER=OFF \
            -DENABLE_EDITOR=OFF

      - name: Build VCMI
        script: |
          cd vcmi/build-ios
          # Компиляция с использованием ninja (рекомендуется в документации VCMI)
          cmake --build . --config Release --parallel $(sysctl -n hw.ncpu)

      - name: Create IPA package
        script: |
          cd vcmi/build-ios
          
          # Создание директории для .ipa
          mkdir -p Payload
          
          # Поиск .app bundle (должен быть в bin/Release)
          if [ -d "bin/Release/vcmi.app" ]; then
            cp -r "bin/Release/vcmi.app" Payload/
          else
            # Альтернативный поиск
            APP_BUNDLE=$(find . -name "*.app" -type d | head -1)
            if [ -z "$APP_BUNDLE" ]; then
              echo "Error: No .app bundle found!"
              find . -name "*.app" -type d
              exit 1
            fi
            echo "Found app bundle: $APP_BUNDLE"
            cp -r "$APP_BUNDLE" Payload/
          fi
          
          # Создание .ipa без подписи
          zip -r vcmi-ios-unsigned.ipa Payload
          
          # Перемещение .ipa в корень проекта
          mv vcmi-ios-unsigned.ipa $CM_BUILD_DIR/

    artifacts:
      - vcmi-ios-unsigned.ipa
      - vcmi/build-ios/**/*.app
      - vcmi/build-ios/bin/Release/*.app

    publishing:
      email:
        recipients:
          - user@example.com # Замените на ваш email