workflows:
  build-vcmi-ios:
    name: Build VCMI iOS (Release)
    max_build_duration: 180
    environment:
      xcode: latest
      vars:
        BUILD_PRESET: "ios-release-conan"
        BUILD_TYPE: "Release"
        BUNDLE_IDENTIFIER_PREFIX: "com.example"
        DEFAULT_TEAM: "0000000000"
        APP_NAME: "VCMI"
    scripts:
      - name: Install system dependencies
        script: |
          brew update
          brew install cmake conan ccache git git-lfs
          git lfs install || true
          conan --version
          cmake --version

      - name: Ensure submodules are present (important!)
        script: |
          echo ">>> Updating submodules"
          git submodule sync --recursive || true
          git submodule update --init --recursive --jobs 4
          echo ">>> Submodule tree:"
          git submodule status --recursive || true
          echo ">>> Repo root listing:"
          ls -la

      - name: Create iOS build profile for Conan (ios-armv8)
        script: |
          mkdir -p ~/.conan2/profiles
          cat > ~/.conan2/profiles/ios-armv8 <<'EOF'
          [settings]
          os=iOS
          os.version=10.0
          arch=armv8
          compiler=apple-clang
          compiler.cppstd=17
          compiler.libcxx=libc++
          build_type=Release
          [conf]
          tools.build:cxxflags=["-stdlib=libc++"]
          tools.build:compiler_executables={"c": "clang", "cpp": "clang++"}
          EOF
          echo "âœ… Created Conan profile ios-armv8"
          echo "Profile contents:"
          cat ~/.conan2/profiles/ios-armv8

      - name: Run Conan to install dependencies (with PYTHONPATH)
        script: |
          echo "PWD: $PWD"
          echo "Listing repo before conan install (check for 'dependencies' folder):"
          ls -la
          # Ensure Python path contains repo root so conanfile.py can import 'dependencies'
          export PYTHONPATH="$PWD:$PYTHONPATH"
          echo "PYTHONPATH=$PYTHONPATH"
          conan install . \
            --output-folder=conan-generated \
            --build=missing \
            -pr:b=default \
            -pr:h=ios-armv8

      - name: Configure project with CMake preset
        script: |
          TEAM_ID=${DEVELOPMENT_TEAM:-$DEFAULT_TEAM}
          cmake --preset $BUILD_PRESET \
            -D BUNDLE_IDENTIFIER_PREFIX=$BUNDLE_IDENTIFIER_PREFIX \
            -D CMAKE_BUILD_TYPE=$BUILD_TYPE \
            -D ENABLE_CCACHE=ON \
            -D CMAKE_XCODE_ATTRIBUTE_DEVELOPMENT_TEAM=$TEAM_ID \
            -D CMAKE_XCODE_ATTRIBUTE_CODE_SIGN_STYLE=Automatic

      - name: Build VCMI via CMake
        script: |
          cmake --build build-$BUILD_PRESET --target vcmiclient -- -quiet

      - name: Package IPA using CPack
        script: |
          cd build-$BUILD_PRESET || exit 1
          cpack -C Release || true
          if ls *.zip >/dev/null 2>&1; then
            ZIPFILE=$(ls *.zip | head -n 1)
            mv "$ZIPFILE" "${ZIPFILE%.zip}.ipa"
          fi
          echo "Artifacts in $(pwd):"
          ls -la

    artifacts:
      - build-ios-release-conan/*.ipa
      - build-ios-release-conan/*.zip

    publishing:
      email:
        recipients:
          - your_email@example.com
